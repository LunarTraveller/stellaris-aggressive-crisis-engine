namespace = acemod_core
# Marks Aggresive Crisis Engine mod as present. Other mods can check against this flag to see if ACEMOD is installed.
event = {
	id = acemod_core.1
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = {
		set_global_flag = acemod_installed
	}
}

# Prevents ACEMOD technologies from rolling.
event = {
	id = acemod_core.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_technology_disabled
	}
}

# Applies anti-crisis damage debuff to all playable empires.
event = {
	id = acemod_core.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_global_flag = galactic_crisis_happened
			has_global_flag = ai_invasion_ongoing			# Contingency crisis_events_3.txt does not set galactic_crisis_happened global flag! Naturally spawning Contingency will set flag via crisis_trigger_events.txt . Manually or by a mod spawned Contingency might lack this global flag.
			has_global_flag = gray_goo_crisis_active
		}
		NOT = {
			has_global_flag = acemod_crisis_debuff_disabled
		}
	}
	immediate = {
		every_playable_country = {
			country_event = {
				id = acemod_core.4
			}
		}
	}
}

# TO DO: Apply modifier to all ships and newly built ships. See on action crisis.2056.
# Run this event to apply an anti-crisis debuff. Set country flag if you want country excluded.
country_event = {
	id = acemod_core.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NOT = {
					has_country_flag = acemod_country_flag_crisis_debuff_modifier
				}
			}
			set_country_flag = acemod_country_flag_crisis_debuff_modifier
			add_modifier = {
				modifier = acemod_crisis_debuff_modifier
				days = -1
			}
		}
	}
}

# Applies anti-relics damage debuff to all playable empires.
event = {
	id = acemod_core.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = sleepers_awake_happened
		NOT = {
			has_global_flag = acemod_fallen_awakened_empire_debuff_disabled
		}
	}
	immediate = {
		every_playable_country = {
			country_event = {
				id = acemod_core.6
			}
		}
	}
}

# Run this event to apply an anti-relics debuff. Set country flag if you want country excluded.
country_event = {
	id = acemod_core.6
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NOT = {
					has_country_flag = acemod_country_flag_fallen_awakened_empire_debuff_modifier
				}
			}
			set_country_flag = acemod_country_flag_fallen_awakened_empire_debuff_modifier
			add_modifier = {
				modifier = acemod_fallen_awakened_empire_debuff_modifier
				days = -1
			}
		}
	}
}

# Disable applying debuffs. Does not remove the ones in place.
country_event = {
	id = acemod_core.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_crisis_debuff_disabled
		set_global_flag = acemod_fallen_awakened_empire_debuff_disabled
	}
}

# Enables rolling of ACEMOD technologies for non-default empires. Does not overwrite ACEMOD technology disable global flag.
country_event = {
	id = acemod_core.11
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_country_flag_technology_allowed
	}
}

# Enables constructor reinforcements for given country.
country_event = {
	id = acemod_core.12
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_constructor_reinforcements
	}
}

# Designates system to spawn constructor in.
event = {
	id = acemod_core.13
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_star_flag = acemod_star_flag_is_constructor_reinforcements_system
	}
}

# Designates fleet to spawn constructor on.
event = {
	id = acemod_core.14
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_fleet_flag = acemod_fleet_flag_is_constructor_reinforcements_fleet
	}
}

# Enables defensive jumpdrive protocol for given country.
event = {
	id = acemod_core.15
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_country_flag = acemod_defensive_jumpdrive_protocol
	}
}

# Designates defensive jumpdrive protocol protected system.
event = {
	id = acemod_core.16
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		solar_system = {
			set_star_flag = acemod_star_flag_is_defensive_jumpdrive_protocol_system
		}
	}
}

# Designates defensive jumpdrive protocol target system.
event = {
	id = acemod_core.17
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		solar_system = {
			set_timed_star_flag = {
				flag = acemod_star_flag_defensive_jumpdrive_protocol_target
				days = 30
			}
		}
	}
}

# Designates defensive jumpdrive protocol target ambient object.
event = {
	id = acemod_core.18
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_ambient_object_flag = acemod_ambient_object_flag_defensive_jumpdrive_protocol_target
	}
}

# Disables defensive jumpdrive protocol for all countries.
event = {
	id = acemod_core.19
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = acemod_defensive_jumpdrive_protocol_disabled
	}
}
